title = chart_title)
return(fig_poles)
}
vict_plot(ham_wins)
vict_plot(vet_wins, 'Red Bull', 'Ferrari')
vict_plot(vettel_wins, 'Red Bull', 'Ferrari')
poles_plot = function(df, constructor1 = 'McLaren', constructor2 = 'Mercedes'){
const1 = df %>% filter(name == constructor1)
const2 = df %>% filter(name == constructor2)
fig_poles = plot_ly(x = ~const1$date,
y = ~const1$poles,
type = 'scatter',
mode = 'lines',
fill = 'tozeroy',
name = constructor1)
fig_poles = fig_poles %>% add_trace(x = ~const2$date,
y = ~const2$poles,
name = constructor2,
fill = 'tozeroy')
if(constructor1 == 'McLaren'){
chart_title = 'Career Poles (Hamilton)'
}else{
chart_title = 'Career Poles (Vettel)'
}
fig_poles = fig_poles %>% layout(xaxis = list(title = 'Date'),
yaxis = list(title = 'Poles'),
title = chart_title)
fig_poles
}
vet_poles = results.csv %>%
filter(driverId == 20) %>%
inner_join(races.csv, by = 'raceId') %>%
select(driverId,constructorId, date, grid) %>%
arrange(driverId, date) %>%
filter(grid == 1) %>%
group_by(driverId) %>%
mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(driverId, date, poles , name) %>% inner_join(drivers.csv, by = "driverId") %>%
select(driverId, date,poles, name, surname)
ham_poles = results.csv %>%
filter(driverId == 1) %>%
inner_join(races.csv, by = 'raceId') %>%
select(driverId,constructorId, date, grid) %>%
arrange(driverId, date) %>%
filter(grid == 1) %>%
group_by(driverId) %>%
mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(driverId, date, poles , name) %>% inner_join(drivers.csv, by = "driverId") %>%
select(driverId, date,poles, name, surname)
poles_plot(ham_poles, 'McLaren','Mercedes')
poles_plot(vet_poles, 'Red Bull','Ferrari')
fig = subplot(list(poles_plot(ham_poles, 'McLaren','Mercedes'),
poles_plot(vet_poles, 'Red Bull','Ferrari')),nrows = 2)
fig
ham_wins =   results.csv %>%
filter(driverId == 1 & position == "1") %>%
inner_join(races.csv, by = "raceId") %>%
inner_join(drivers.csv, by = "driverId") %>%
select(driverId,constructorId, date, position) %>%
mutate(position = as.numeric(position)) %>% arrange(driverId, date) %>%
filter(position == 1) %>% group_by(driverId) %>% mutate(Wins = cumsum(position)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(driverId, date, Wins , name) %>% inner_join(drivers.csv, by = "driverId") %>%
select(driverId, date,Wins, name, surname)
vettel_wins = results.csv %>%
filter(driverId == 20 & position == "1") %>%
inner_join(races.csv, by = "raceId") %>%
inner_join(drivers.csv, by = "driverId") %>%
select(driverId,constructorId, date, position) %>%
mutate(position = as.numeric(position)) %>% arrange(driverId, date) %>%
filter(position == 1) %>% group_by(driverId) %>% mutate(Wins = cumsum(position)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(driverId, date, Wins , name) %>% inner_join(drivers.csv, by = "driverId") %>%
select(driverId, date,Wins, name, surname)
vict_plot = function(df, constructor1 = 'McLaren', constructor2 = 'Mercedes'){
const1 = df %>% filter(name == constructor1)
const2 = df %>% filter(name == constructor2)
fig_poles = plot_ly(x = ~const1$date,
y = ~const1$Wins,
type = 'scatter',
mode = 'lines',
fill = 'tozeroy',
name = constructor1)
fig_poles = fig_poles %>% add_trace(x = ~const2$date,
y = ~const2$Wins,
name = constructor2,
fill = 'tozeroy')
chart_title = ''
if(constructor1 == 'McLaren'){
chart_title = 'Career Victories (Hamilton)'
}else{
chart_title = 'Career Victories (Vettel)'
}
fig_poles = fig_poles %>% layout(xaxis = list(title = 'Date'),
yaxis = list(title = 'Victories'),
title = chart_title)
return(fig_poles)
}
vict_plot(ham_wins)
vict_plot(vettel_wins, 'Red Bull', 'Ferrari')
# Constructor races won
constructors.csv
View(constructors.csv)
View(constructors.csv)
# Constructor races won
# constructor id 6 - Ferrari,9 - Red Bull, 131 - Mercedes
races.csv
races.csv %>%
group_by(year) %>%
filter(round == max(round)) %>%
select(year, raceId) %>%
arrange(desc(year), raceId) %>% filter(year >=2014 & year < 2021)
# Let's write a function to find out the championship winning team between any time period. The function will take in the starting
# time period and the ending time period and will return a table with the winning constructor for that year
champion_constructor = function(start_year, end_year){
last_race_y = races.csv %>%
group_by(year) %>%
filter(round == max(round)) %>%
select(year, raceId) %>%
arrange(desc(year), raceId) %>% filter(year <= end_year & year >= start_year)
constructor_standings.csv %>%
inner_join(last_race_y, by = "raceId") %>%
filter(position == 1) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(year, name) %>% rename(`Constructor Champion` = name,
Year = year) %>% arrange(Year)
}
knitr::kable(champion_constructor(2010, 2020), align = 'clc', caption = "Constructor Champions (2010 - 2020)") %>%
kableExtra::kable_styling(full_width = FALSE, position = 'float_left',bootstrap_options = "striped")
knitr::kable(champion_constructor(1999, 2009), align = 'clc',caption = "Constructor Champions (1999 - 2009)") %>%
kableExtra::kable_styling(full_width = FALSE, position = 'right',bootstrap_options = "striped")
results.csv
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131)
races.csv
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId")
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year >= 2020)
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year >= 2020) %>%
filter(as.numeric(position) == 1) %>%
group_by(constructorId) %>% summarise(n = n())
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year >= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n())
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n())
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
inner_join(constructors.csv, by = "raceId")
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
inner_join(constructors.csv, by = "constructorId")
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
inner_join(constructors.csv, by = "constructorId")
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorRef) %>% summarise(n = n())
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
inner_join(constructors.csv, by = "constructorId")
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1")
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n())
constructors.csv
results.csv %>%
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n()) %>%
inner_join(constructors.csv, by = "constructorId")
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n())
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n()) %>%
inner_join(constructors.csv, by = "constructorId")
races = results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n()) %>%
inner_join(constructors.csv, by = "constructorId")
fig <- plot_ly(
x = races$constructorRef,
y = races$n,
type = "bar"
)
fig
races
fig <- plot_ly(
x = races$name,
y = races$n,
type = "bar"
)
fig
fig = plot_ly(
x = races$name,
y = races$n,
type = "bar"
)
fig = fig %>%
layout(title = "Total Wins(2014-2020)",
xaxis = list(title = "Constructor"),
yaxis = list(title = "Total Wins"))
fig = plot_ly(
x = races$name,
y = races$n,
type = "bar"
)
fig = fig %>%
layout(title = "Total Wins(2014-2020)",
xaxis = list(title = "Constructor"),
yaxis = list(title = "Total Wins"))
fig
races = results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020) %>%
filter(position == "1") %>%
group_by(constructorId) %>% summarise(n = n()) %>%
inner_join(constructors.csv, by = "constructorId")
fig = plot_ly(
x = races$name,
y = races$n,
type = "bar"
)
fig = fig %>%
layout(title = "Total Wins(2014-2020)",
xaxis = list(title = "Constructor"),
yaxis = list(title = "Win Count"))
fig
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020)
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>% select(constructorId, raceId, date, grid)
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId, date) %>% mutate(poles = cumsum(grid))
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid))
constructors.csv
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId")
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>% select(date, name, poles)
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles)
poles =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles)
poles
View(poles)
?fill
poles =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles) %>%
fill(Mercedes, .direction = "down") %>%
fill(Ferrari, .direction = "down") %>%
fill(`Red Bull`, .direction = "down") %>%
poles =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles) %>%
fill(Mercedes, .direction = "down") %>%
fill(Ferrari, .direction = "down") %>%
fill(`Red Bull`, .direction = "down")
poles =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles) %>%
fill(Mercedes, .direction = "down") %>%
fill(Ferrari, .direction = "down") %>%
fill(`Red Bull`, .direction = "down")
View(poles)
poles =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles)
poles =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles) %>% ungroup()
poles =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & grid == 1) %>%
select(constructorId, raceId, date, grid) %>%
group_by(constructorId) %>% mutate(poles = cumsum(grid)) %>%
ungroup() %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, poles) %>%
pivot_wider(names_from = name, values_from = poles)
source('D:/Spring 21/STAT 440/Final Project/Final Project Code.R', echo=TRUE)
poles
poles = poles %>% fill(Mercedes, .direction = "down")
View(poles)
poles = poles %>% fill(Ferrari, .direction = "down")
View(poles)
poles = poles %>% fill(`Red Bull`, .direction = "down")
View(poles)
poles = poles %>% replace_na(list(Ferrari = 0, `Red Bull` = 0))
poles
View(poles)
fig = plot_ly(poles,
x = ~date,
y = ~Mercedes,
name = 'Mercedes',
type = 'scatter',
mode = 'none',
stackgroup = 'one',
groupnorm = 'percent',
fillcolor = '#32b8c9')
fig
fig = plot_ly(poles,
x = ~date,
y = ~Mercedes,
name = 'Mercedes',
type = 'scatter',
mode = 'none',
stackgroup = 'one',
fillcolor = '#32b8c9')
fig
fig = plot_ly(poles,
x = ~date,
y = ~Mercedes,
name = 'Mercedes',
type = 'scatter',
mode = 'none',
stackgroup = 'one',
fillcolor = '#32b8c9')
fig = fig %>% add_trace(y = ~Ferrari, name = 'Ferrari', fillcolor = '#c93237')
fig
fig = plot_ly(poles,
x = ~date,
y = ~Mercedes,
name = 'Mercedes',
type = 'scatter',
mode = 'none',
stackgroup = 'one',
fillcolor = '#32b8c9')
fig = fig %>% add_trace(y = ~Ferrari, name = 'Ferrari', fillcolor = '#c93237')
fig = fig %>% add_trace(y = ~`Red Bull`, name = 'Red Bull', fillcolor = '#4432c9')
fig
fig = plot_ly(poles,
x = ~date,
y = ~Mercedes,
name = 'Mercedes',
type = 'scatter',
mode = 'none',
stackgroup = 'one',
fillcolor = '#32b8c9')
fig = fig %>% add_trace(y = ~Ferrari, name = 'Ferrari', fillcolor = '#c93237')
fig = fig %>% add_trace(y = ~`Red Bull`, name = 'Red Bull', fillcolor = '#4432c9')
fig = fig %>% layout(title = "Pole Positions (2014 - 2020)",
xaxis = list(title = "Year"),
yaxis = list(title = "Poles Count"))
fig
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & position == "1") %>%
mutate(position = as.numeric(position)) %>%
select(constructorId, raceId, date, position) %>%
group_by(constructorId) %>% mutate(wins = cumsum(position)) %>%
ungroup() %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, wins) %>%
pivot_wider(names_from = name, values_from = wins)
wins =
results.csv %>%
filter(constructorId == 6 | constructorId == 9 | constructorId == 131) %>%
inner_join(races.csv, by = "raceId") %>%
filter(year >= 2014 & year <= 2020 & position == "1") %>%
mutate(position = as.numeric(position)) %>%
select(constructorId, raceId, date, position) %>%
group_by(constructorId) %>% mutate(wins = cumsum(position)) %>%
ungroup() %>%
inner_join(constructors.csv, by = "constructorId") %>%
select(date, name, wins) %>%
pivot_wider(names_from = name, values_from = wins)
wins
wins
wins = wins %>% fill(Mercedes, .direction = "down")
wins = wins %>% fill(Ferrari, .direction = "down")
wins = wins %>% fill(`Red Bull`, .direction = "down")
wins = wins %>% replace_na(list(Ferrari = 0, `Red Bull` = 0))
wins
fig = plot_ly(wins,
x = ~date,
y = ~Mercedes,
name = 'Mercedes',
type = 'scatter',
mode = 'none',
stackgroup = 'one',
fillcolor = '#32b8c9')
fig = fig %>% add_trace(y = ~Ferrari, name = 'Ferrari', fillcolor = '#c93237')
fig = fig %>% add_trace(y = ~`Red Bull`, name = 'Red Bull', fillcolor = '#4432c9')
fig = fig %>% layout(title = "Pole Positions (2014 - 2020)",
xaxis = list(title = "Year"),
yaxis = list(title = "Poles Count"))
fig
# listing all the csv files in the data directory
file_nm = list.files("archive/")
# Reading all the files in the archive folder:
for(i in seq(1:length(file_nm))){
str = paste0(file_nm[i],"=","read_csv(",'"','archive/',file_nm[i],'"',")")
eval(parse(text = str))
print(file_nm[i])
}
